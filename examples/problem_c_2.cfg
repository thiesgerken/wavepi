# WavePI settings file
# generated by wavepi 14feb05b-dirty (built 2017-12-08T13:45:37Z)

subsection WaveEquation
  # parameter θ in the time discretization (θ=1 -> backward euler, θ=0 ->
  # forward euler, θ=0.5 -> Crank-Nicolson
  set theta = 0.5

  # rel. tolerance for the solution of linear systems
  set tol   = 1e-8
end

subsection constraints
  # lower bound for reconstructed parameter
  set lower bound = 0.1

  # upper bound for reconstructed parameter
  set upper bound = 1e300
end

subsection general
  # problem dimension
  set dimension             = 2

  # polynomial degree of finite elements
  set finite element degree = 1

  # order of quadrature (QGauss, exact in polynomials of degree ≤ 2n-1, use
  # at least finite element degree + 1)
  set quadrature order      = 3
end

subsection inversion
  # solver for the inverse problem
  set method = REGINN

  # parameter τ for discrepancy principle
  set tau    = 2

  subsection NonlinearLandweber
    # relaxation factor ω
    set omega = 1
  end

  subsection REGINN
    # regularization method for the linear subproblems
    set linear solver    = ConjugateGradients

    # algorithm that chooses the target discrepancies for the linear
    # subproblems
    set tolerance choice = Rieder

    subsection ConstantToleranceChoice
      # rel. tolerance
      set tol = 0.7
    end

    subsection Landweber
      # relaxation factor ω
      set omega = 1
    end

    subsection RiederToleranceChoice
      # allowed speed of iteration numbers
      set beta      = 1.0

      # rel. maximum tolerance
      set tol max   = 0.95

      # rel. starting tolerance
      set tol start = 0.7

      # factor to decrease tolerance by
      set zeta      = 0.9
    end

  end

end

subsection log
  # depth for stdout
  set console depth = 2

  # external log file
  set file          = wavepi.log

  # depth for the log file
  set file depth    = 100
end

subsection mesh
  # time horizon T
  set end time           = 6

  # refines of the (initial) spatial grid
  set initial refines    = 5

  # (initial) number of time steps
  set initial time steps = 256

  subsection shape
    # generator for the triangulation
    set generator name = hyper_cube

    # options for the generator, in the form `var1=value1, var2=value2, ...`.
    # Available options: left, right for hyper_cube and hyper_L,
    # center_{x,y,z} and radius for hyper_cube, scale for cheese.
    set options        = left=-4.0, right=4.0
  end

end

subsection output
  # output the problem's right hand side on the first iteration
  set data        = true

  # output path for step {{i}}; has to end with a slash
  set destination = ./step-{{i}}/

  # output the current estimate
  set estimate    = true

  # output the problem's exact solution on the first iteration
  # (if available and discretized on first grid)
  set exact       = true

  # output every n iterations, or never if n == 0.
  set interval    = 10

  # output the last iteration before exit
  set last        = true

  # output the current residual
  set residual    = true
end

subsection problem
  # constants for the function declarations,
  # in the form `var1=value1, var2=value2, ...`.
  set constants     =

  # relative noise level ε
  set epsilon       = 1e-2

  # initial guess
  set initial guess = 1.0

  # parameter a
  set parameter a   = 1.0

  # parameter c
  set parameter c   = 1.5

  # parameter ν
  set parameter nu  = 0.0

  # parameter q
  set parameter q   = 0.0

  # parameter that is reconstructed, and which spaces are used
  set type          = L2C

  subsection data
    # configuration to use for which right hand side, separated by semicolons
    set configurations             = 0

    # Number of right hand sides
    set number of right hand sides = 1

    # right hand sides, separated by semicolons
    set right hand sides           = if(t<3, if(norm{x|y|z} < 0.2, sin(3*t), 0.0), 0)

    subsection config 0
      # type of measurements
      set measure = Identical

      subsection GridPointMeasure
        # points for the grid in time. Format: '[lower bound]:[number of
        # points]:[upper bound]'.
        # Upper bound is inclusive, lower bound is exclusive iff it equals
        # 0.0.
        set points t = 0:10:6

        # points for the grid in x-direction. Format: '[lower bound]:[number
        # of points]:[upper bound]'.
        # Lower bound and upper bound are exclusive.
        set points x = -1:10:1

        # points for the grid in y-direction. Format: '[lower bound]:[number
        # of points]:[upper bound]'.
        # Lower bound and upper bound are exclusive.
        set points y = -1:10:1

        # points for the grid in z-direction. Format: '[lower bound]:[number
        # of points]:[upper bound]'.
        # Lower bound and upper bound are exclusive.
        set points z = -1:10:1

        subsection PointMeasure
          # scaling of shape function in spatial variables
          set radius space = 0.2

          # scaling of shape function in time variable
          set radius time  = 0.2

          # shape of the delta approximating function.
          set shape        = hat
        end

      end

    end

    subsection config 1
      # type of measurements
      set measure = Identical

      subsection GridPointMeasure
        # points for the grid in time. Format: '[lower bound]:[number of
        # points]:[upper bound]'.
        # Upper bound is inclusive, lower bound is exclusive iff it equals
        # 0.0.
        set points t = 0:10:6

        # points for the grid in x-direction. Format: '[lower bound]:[number
        # of points]:[upper bound]'.
        # Lower bound and upper bound are exclusive.
        set points x = -1:10:1

        # points for the grid in y-direction. Format: '[lower bound]:[number
        # of points]:[upper bound]'.
        # Lower bound and upper bound are exclusive.
        set points y = -1:10:1

        # points for the grid in z-direction. Format: '[lower bound]:[number
        # of points]:[upper bound]'.
        # Lower bound and upper bound are exclusive.
        set points z = -1:10:1

        subsection PointMeasure
          # scaling of shape function in spatial variables
          set radius space = 0.2

          # scaling of shape function in time variable
          set radius time  = 0.2

          # shape of the delta approximating function.
          set shape        = hat
        end

      end

    end

  end

end
